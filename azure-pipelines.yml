trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  MAVEN_OPTS: '-Xmx1024m'
  JDK_VERSION: '11'
  CHROME_VERSION: 'latest'  # Use 'latest' for the most recent stable version
  CHROMEDRIVER_VERSION: 'latest'  # Corresponding version for the latest Chrome

steps:
- script: |
    # Check if Java JDK is already installed
    if ! java -version 2>&1 | grep -q 'openjdk version "11'; then
      echo "Java JDK 11 not found. Installing..."
      sudo apt-get update
      sudo apt-get install -y openjdk-11-jdk wget unzip
    else
      echo "Java JDK 11 is already installed."
    fi
  displayName: 'Check and Install Java JDK'

- script: |
    # Uninstall existing Google Chrome
    if [ -f /usr/bin/google-chrome ]; then
      echo "Removing existing Google Chrome..."
      sudo apt-get remove -y google-chrome-stable
    fi
  displayName: 'Uninstall Existing Google Chrome'

- script: |
    # Install the latest stable version of Google Chrome
    echo "Installing the latest stable version of Google Chrome..."
    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    sudo apt-get update
    sudo apt-get install -y ./google-chrome-stable_current_amd64.deb
  displayName: 'Install Latest Google Chrome'

- script: |
    # Install the latest compatible version of ChromeDriver
    echo "Installing the latest compatible version of ChromeDriver..."
    LATEST_CHROMEDRIVER_VERSION=$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)
    wget https://chromedriver.storage.googleapis.com/${LATEST_CHROMEDRIVER_VERSION}/chromedriver_linux64.zip
    unzip chromedriver_linux64.zip
    sudo mv -f chromedriver /usr/local/bin/chromedriver
    sudo chmod +x /usr/local/bin/chromedriver
    rm chromedriver_linux64.zip
  displayName: 'Install Latest ChromeDriver'

- script: |
    # Print versions of Google Chrome and ChromeDriver
    echo "Google Chrome version:"
    google-chrome --version
    echo "ChromeDriver version:"
    chromedriver --version
  displayName: 'Print Google Chrome and ChromeDriver Versions'

- script: |
    # Run a simple curl command to test network connectivity
    echo "Testing network connectivity..."
    curl -I https://www.google.com
  displayName: 'Test Network Connectivity'

- task: Maven@3
  inputs:
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    options: 'clean test -DSuiteXmlFile=suitefiles/PulseSuite.xml'
  displayName: 'Run Maven Tests'

- script: |
    if [ ! -d 'target/cucumber-reports' ]; then
      echo "Cucumber reports directory not found. Exiting..."
      exit 1
    fi
  displayName: 'Check Cucumber Reports Directory'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: 'target/cucumber-reports'  # Ensure this path is correct for your Cucumber reports
    artifactName: 'cucumber-reports'
    publishLocation: 'Container'
  displayName: 'Publish Cucumber Reports'
  condition: succeeded()
