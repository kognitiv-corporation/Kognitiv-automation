trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  MAVEN_OPTS: '-Xmx1024m'
  JDK_VERSION: '11'
  CHROME_VERSION: '113.0.5672.126'  # Specify your desired Chrome version
  CHROMEDRIVER_VERSION: '113.0.5672.63'  # Specify your desired ChromeDriver version

steps:
- script: |
    # Check if Java JDK is already installed
    if ! java -version 2>&1 | grep -q 'openjdk version "11'; then
      echo "Java JDK 11 not found. Installing..."
      sudo apt-get update
      sudo apt-get install -y openjdk-11-jdk wget unzip
    else
      echo "Java JDK 11 is already installed."
    fi
  displayName: 'Check and Install Java JDK'

- script: |
    # Install Chromium if not already installed
    sudo apt-get update
    sudo apt-get install -y chromium-browser
  displayName: 'Install Chromium'

- script: |
    # Download and install specific version of ChromeDriver if not already installed
    if ! chromedriver --version | grep -q 'ChromeDriver $CHROMEDRIVER_VERSION'; then
      echo "Installing ChromeDriver version $CHROMEDRIVER_VERSION..."
      wget https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
      unzip chromedriver_linux64.zip
      sudo mv -f chromedriver /usr/local/bin/chromedriver
      sudo chmod +x /usr/local/bin/chromedriver
      rm chromedriver_linux64.zip
    else
      echo "ChromeDriver $CHROMEDRIVER_VERSION is already installed."
    fi
  displayName: 'Install Specific Version of ChromeDriver'

- script: |
    # Print versions of Chromium and ChromeDriver
    echo "Chromium version:"
    chromium-browser --version
    echo "ChromeDriver version:"
    chromedriver --version
  displayName: 'Print Chromium and ChromeDriver Versions'

- script: |
    # Run a simple curl command to test network connectivity
    echo "Testing network connectivity..."
    curl -I https://www.google.com
  displayName: 'Test Network Connectivity'

- task: Maven@3
  inputs:
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    options: 'clean test -DSuiteXmlFile=suitefiles/PulseSuite.xml'
  displayName: 'Run Maven Tests'

- script: |
    if [ ! -d 'target/cucumber-reports' ]; then
      echo "Cucumber reports directory not found. Exiting..."
      exit 1
    fi
  displayName: 'Check Cucumber Reports Directory'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: 'target/cucumber-reports'  # Ensure this path is correct for your Cucumber reports
    artifactName: 'cucumber-reports'
    publishLocation: 'Container'
  displayName: 'Publish Cucumber Reports'
  condition: succeeded()
